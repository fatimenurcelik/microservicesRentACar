package com.kodlamaio.inventoryService.business.concretes;

import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Service;

import com.kodlamaio.common.utilities.mapping.ModelMapperService;
import com.kodlamaio.inventoryService.business.abstracts.ModelService;
import com.kodlamaio.inventoryService.business.requests.create.CreateModelRequest;
import com.kodlamaio.inventoryService.business.requests.update.UpdateModelRequest;
import com.kodlamaio.inventoryService.business.responses.create.CreateModelResponse;
import com.kodlamaio.inventoryService.business.responses.get.GetAllModelsResponse;
import com.kodlamaio.inventoryService.business.responses.update.UpdateModelResponse;
import com.kodlamaio.inventoryService.dataAccess.ModelRepository;
import com.kodlamaio.inventoryService.entities.Model;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class ModelManager implements ModelService{
	private ModelRepository modelRepository;
	private ModelMapperService modelMapperService;

	@Override
	public List<GetAllModelsResponse> getAll() {
		List<Model> models = modelRepository.findAll();
		return models.stream().map(model -> modelMapperService.forResponse()
				.map(model, GetAllModelsResponse.class))
					.toList();
	}

	@Override
	public CreateModelResponse add(CreateModelRequest createRequest) {
		Model model = modelMapperService.forRequest().map(createRequest, Model.class);
		model.setId(UUID.randomUUID().toString());
		modelRepository.save(model);
		return modelMapperService.forResponse().map(model, CreateModelResponse.class);
	}

	@Override
	public UpdateModelResponse update(UpdateModelRequest updateRequest) {
		Model model = modelMapperService.forRequest().map(updateRequest, Model.class);
		modelRepository.save(model);
		UpdateModelResponse updateResponse = modelMapperService.forResponse().map(model, UpdateModelResponse.class);
		return updateResponse;
	}

	@Override
	public void delete(String id) {
		modelRepository.deleteById(id);
	}
	
}
